// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// neighbourhood
NumericMatrix neighbourhood(NumericMatrix x, NumericMatrix wdist, int state);
RcppExport SEXP FoxSim_neighbourhood(SEXP xSEXP, SEXP wdistSEXP, SEXP stateSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type wdist(wdistSEXP );
        Rcpp::traits::input_parameter< int >::type state(stateSEXP );
        NumericMatrix __result = neighbourhood(x, wdist, state);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// matchspatial
LogicalMatrix matchspatial(NumericMatrix locs, NumericMatrix x, int ncells, int state);
RcppExport SEXP FoxSim_matchspatial(SEXP locsSEXP, SEXP xSEXP, SEXP ncellsSEXP, SEXP stateSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type locs(locsSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        Rcpp::traits::input_parameter< int >::type ncells(ncellsSEXP );
        Rcpp::traits::input_parameter< int >::type state(stateSEXP );
        LogicalMatrix __result = matchspatial(locs, x, ncells, state);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// foxsim
List foxsim(NumericMatrix x, NumericMatrix roads, List incpoints, List Kern, List parms);
RcppExport SEXP FoxSim_foxsim(SEXP xSEXP, SEXP roadsSEXP, SEXP incpointsSEXP, SEXP KernSEXP, SEXP parmsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type roads(roadsSEXP );
        Rcpp::traits::input_parameter< List >::type incpoints(incpointsSEXP );
        Rcpp::traits::input_parameter< List >::type Kern(KernSEXP );
        Rcpp::traits::input_parameter< List >::type parms(parmsSEXP );
        List __result = foxsim(x, roads, incpoints, Kern, parms);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
