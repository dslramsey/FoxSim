// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// neighbourhood
NumericVector neighbourhood(int n, int m, NumericVector x, int ndist, NumericVector wdist, int state);
RcppExport SEXP FoxSim_neighbourhood(SEXP nSEXP, SEXP mSEXP, SEXP xSEXP, SEXP ndistSEXP, SEXP wdistSEXP, SEXP stateSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type m(mSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< int >::type ndist(ndistSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type wdist(wdistSEXP );
        Rcpp::traits::input_parameter< int >::type state(stateSEXP );
        NumericVector __result = neighbourhood(n, m, x, ndist, wdist, state);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// matchspatial
NumericVector matchspatial(int n, int m, NumericVector y, NumericVector x, int ncells, int state);
RcppExport SEXP FoxSim_matchspatial(SEXP nSEXP, SEXP mSEXP, SEXP ySEXP, SEXP xSEXP, SEXP ncellsSEXP, SEXP stateSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        Rcpp::traits::input_parameter< int >::type m(mSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP );
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< int >::type ncells(ncellsSEXP );
        Rcpp::traits::input_parameter< int >::type state(stateSEXP );
        NumericVector __result = matchspatial(n, m, y, x, ncells, state);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// foxsim
List foxsim(int nr, int nc, int ksize, NumericVector x, NumericVector roads, List incpoints, List Kern, List parms);
RcppExport SEXP FoxSim_foxsim(SEXP nrSEXP, SEXP ncSEXP, SEXP ksizeSEXP, SEXP xSEXP, SEXP roadsSEXP, SEXP incpointsSEXP, SEXP KernSEXP, SEXP parmsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< int >::type nr(nrSEXP );
        Rcpp::traits::input_parameter< int >::type nc(ncSEXP );
        Rcpp::traits::input_parameter< int >::type ksize(ksizeSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type roads(roadsSEXP );
        Rcpp::traits::input_parameter< List >::type incpoints(incpointsSEXP );
        Rcpp::traits::input_parameter< List >::type Kern(KernSEXP );
        Rcpp::traits::input_parameter< List >::type parms(parmsSEXP );
        List __result = foxsim(nr, nc, ksize, x, roads, incpoints, Kern, parms);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// foxscatsim
List foxscatsim(int nr, int nc, int ksize, NumericVector x, NumericVector roads, List incpoints, List Kern, List parms);
RcppExport SEXP FoxSim_foxscatsim(SEXP nrSEXP, SEXP ncSEXP, SEXP ksizeSEXP, SEXP xSEXP, SEXP roadsSEXP, SEXP incpointsSEXP, SEXP KernSEXP, SEXP parmsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< int >::type nr(nrSEXP );
        Rcpp::traits::input_parameter< int >::type nc(ncSEXP );
        Rcpp::traits::input_parameter< int >::type ksize(ksizeSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type roads(roadsSEXP );
        Rcpp::traits::input_parameter< List >::type incpoints(incpointsSEXP );
        Rcpp::traits::input_parameter< List >::type Kern(KernSEXP );
        Rcpp::traits::input_parameter< List >::type parms(parmsSEXP );
        List __result = foxscatsim(nr, nc, ksize, x, roads, incpoints, Kern, parms);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
